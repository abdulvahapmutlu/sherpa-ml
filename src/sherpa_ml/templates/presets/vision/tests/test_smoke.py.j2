import importlib
import importlib.util
import subprocess
import sys
from pathlib import Path

import pytest

# Normalize to dotted module path even if caller passed a path-like pkg
PKG = "{{ pkg | replace('/', '.') }}"


def project_root() -> Path:
    # Project root (one level up from this tests/ dir in the rendered repo)
    return Path(__file__).resolve().parents[1]


def _has_module(name: str) -> bool:
    return importlib.util.find_spec(name) is not None


def test_import():
    importlib.import_module(PKG)


def test_train_fast():
    # Vision preset commonly depends on torch; skip if not available
    if not _has_module("torch"):
        pytest.skip("PyTorch not installed; skipping fast train smoke test.")
    root = project_root()
    proc = subprocess.run(
        [sys.executable, "-m", f"{PKG}.train"],
        cwd=root,
        capture_output=True,
        text=True,
    )
    assert proc.returncode == 0, proc.stderr
