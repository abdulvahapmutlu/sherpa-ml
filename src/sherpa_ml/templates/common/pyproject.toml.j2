{%- if project_name_pep508 is not defined or not project_name_pep508 %}
  {# Seed from the most likely variables you already use #}
  {%- set _seed = project_name
        | default(repo_name)
        | default(package_name)
        | default('.') %}

  {# Take only the last path segment #}
  {%- set _seed = _seed.split('/')[-1].split('\\')[-1] %}

  {# Lowercase and map invalid chars to '-' (allowed: a-z0-9._-) #}
  {%- set _seed = _seed | lower %}
  {%- set _allowed = 'abcdefghijklmnopqrstuvwxyz0123456789._-' %}
  {%- set ns = namespace(s='') %}
  {%- for ch in _seed %}
    {%- if ch in _allowed -%}
      {%- set ns.s = ns.s ~ ch -%}
    {%- else -%}
      {%- set ns.s = ns.s ~ '-' -%}
    {%- endif -%}
  {%- endfor %}

  {# Collapse repeated separators #}
  {%- set ns.s = ns.s
        | replace('---','-')
        | replace('--','-') %}

  {# Trim disallowed leading/trailing separators (._-) #}
  {%- set ns.s = ns.s.strip('._-') %}

  {# Fallback if empty after sanitization #}
  {%- if not ns.s %}
    {%- set ns.s = 'project' %}
  {%- endif %}

  {%- set project_name_safe = ns.s %}
{%- else %}
  {# Renderer-supplied safe name wins #}
  {%- set project_name_safe = project_name_pep508 %}
{%- endif %}

[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ project_name_safe }}"
version = "{{ project_version | default('0.1.0') }}"
description = "{{ project_description | default('Production-grade ML scaffold generated by sherpa-ml') }}"
readme = "{{ project_readme | default('README.md') }}"
requires-python = "{{ python_min | default('>=3.10') }}"
authors = [
  { name = "{{ author_name | default('Your Name') }}", email = "{{ author_email | default('you@example.com') }}" }
]
license = { text = "{{ license_name | default('MIT') }}" }

{# Example dependencies; keep empty list if none #}
dependencies = [
  {% if project_dependencies is defined and project_dependencies %}
    {%- for dep in project_dependencies -%}
      "{{ dep }}"{% if not loop.last %},{% endif %}
    {%- endfor -%}
  {% endif %}
]

[project.urls]
Homepage = "{{ project_url | default('https://github.com/your/repo') }}"
Repository = "{{ project_repo | default('https://github.com/your/repo') }}"
Issues = "{{ project_issues | default('https://github.com/your/repo/issues') }}"

[project.scripts]
{{ cli_name | default(project_name_safe) }} = "{{ package_import_path | default(project_name_safe | replace('-', '_')) }}.cli:main"

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E","F","I","B","UP"]
ignore = []
exclude = ["build", "dist", ".venv", ".mypy_cache", ".ruff_cache"]

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true
exclude = ["build", "dist", ".venv"]

[tool.setuptools]
# If you need packages discovery, you can switch to find_namespace if you use src layout
# packages = ["{{ package_import_path | default(project_name_safe | replace('-', '_')) }}"]

[tool.setuptools.packages.find]
where = ["{{ packages_root | default('src') }}"]

[tool.setuptools.package-data]
"{{ package_import_path | default(project_name_safe | replace('-', '_')) }}" = ["py.typed"]

